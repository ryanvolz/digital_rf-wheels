env:
    global:
        - PROJECT_SPEC="digital_rf==2.6.6"
        - PACKAGE_NAME="digital_rf"
        # pip dependencies to _build_ your project
        - BUILD_DEPENDS="oldest-supported-numpy pkgconfig setuptools wheel"
        # pip dependencies to _test_ your project, beyond the setup.py install
        # dependencies and potentially including specific versions
        - TEST_DEPENDS="oldest-supported-numpy pytest"
        # Note: TWINE_USERNAME and TWINE_PASSWORD are set in Travis settings

language: generic
dist: xenial
services: docker
# osx image that enables building Apple silicon libraries
osx_image: xcode12.2

matrix:
  include:
    # add osx first into the queue as they have lower parallelism
    - os: osx
      env:
        - MB_PYTHON_VERSION=3.6
    - os: osx
      env:
        - MB_PYTHON_VERSION=3.7
        - MB_PYTHON_OSX_VER=10.6
    - os: osx
      env:
        - MB_PYTHON_VERSION=3.7
    - os: osx
      env:
        - MB_PYTHON_VERSION=3.8
    - os: osx
      env:
        - MB_PYTHON_VERSION=3.9
        - PLAT="universal2"
    - os: osx
      env:
        - MB_PYTHON_VERSION=3.9
    - os: osx
      env:
        - MB_PYTHON_VERSION=pypy-5.7
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.7
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.8
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.9

before_install:
    - source multibuild/common_utils.sh
    - source multibuild/travis_steps.sh
    - before_install

install:
    - build_index_wheel $PROJECT_SPEC
    - ls $WHEEL_SDIR/*

script:
    # run tests
    - install_run $PLAT

after_success:
    # Upload wheels to PyPI
    - python -m pip install --upgrade pyOpenSSL
    - python -m pip install twine
    - python -m twine upload --skip-existing $WHEEL_SDIR/*
